<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_816691_inciden_0_chatgpt</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_816691_inciden_0_chatgpt">questionVALCHANGES^EQ<item endquery="false" field="question" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>ChatGpt</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
       
        var r = new sn_ws.RESTMessageV2('ChatGPT', 'POST');//give your rest mesage name and method name
        r.setStringParameterNoEscape('model', "text-davinci-003");
        r.setStringParameterNoEscape('prompt', current.question);//give your field name
        r.setStringParameterNoEscape('max_tokens', 100);
        r.setStringParameterNoEscape('temperature', 0);

        var response = r.execute();
        var responseBody = response.getBody();//it will give the response body
        var code = response.getStatusCode();//get status code
		gs.info("get response:"+responseBody);
        var responseObj = JSON.parse(responseBody);
        current.request = r.getRequestBody();//it will give the request body
        current.response = responseBody;
        current.status_code = code;
        current.answer = responseObj.choices[0].text;//it will give the text from response
		gs.info("answer :"+responseObj.choices.text);
        current.setWorkflow(false);
        current.update();
        current.setWorkflow(true);

    } catch (ex) {
        var message = ex.message;
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-23 11:46:45</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6efa6bc897103110098ef2a3f153af2d</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ChatGpt</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident Management" source="x_816691_inciden_0">7581019d978031103e74fed11153af8f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Incident Management">7581019d978031103e74fed11153af8f</sys_scope>
        <sys_update_name>sys_script_6efa6bc897103110098ef2a3f153af2d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-24 06:06:42</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6efa6bc897103110098ef2a3f153af2d"/>
</record_update>
